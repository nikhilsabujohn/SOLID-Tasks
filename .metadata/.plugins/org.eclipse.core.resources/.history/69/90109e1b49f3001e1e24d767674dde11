package com.ty.listDupe;

public class check {
	class node
	{
		int data;
		node next;
	
	public node(int data)
	{
		this.data=data;
		this.next=null;
	}
	}
	public node head;
	public node tail;
	
	
	
	public void addNode(int data)
	{
		node newnode= new node(data);
		if(head==null)
		{
			head=newnode;
			tail=newnode;
		}
		else
		{
			tail.next=newnode;
			tail=newnode;
		}
	}
	
	public void deleteNode(int key){
		node temp=head;
		node prev=null;
		if(temp == null){
            System.out.println("Can't delete Linked List empty");
            return;
        }
		 if(temp.data==key)
	        {
	            head = temp.next; 
	        }
		 while (temp != null && temp.data != key)
	        {
	            prev = temp;
	            temp = temp.next;
	        }
		 if(temp==null)
	        {
	            System.out.println("Value not found");
	            return;
	        }
		 prev.next = temp.next;
	     System.out.println("Deleted: " + key);
		
	}
	
	public void Display()
	{
		node current;
		current=head;
		if(head==null)
		{
			System.out.println("empty list");
		}
		else
		{
			while(current!=null)
			{
				System.out.println(current.data);
				current=current.next;
			}
		}
	}
	
	
	public static void main(String[] args) {
		check nlist=new check();
		nlist.addNode(1);
		nlist.addNode(1);
		nlist.addNode(2);
		nlist.addNode(2);
		nlist.addNode(1);
		nlist.deleteNode(2);
		
		nlist.Display();
	}
	
	

}
