package liskovSubstitutionPrinciple;

import java.util.Scanner;

import singleResponsibilityPrinciple.DepositService;
import singleResponsibilityPrinciple.NotificationService;
import singleResponsibilityPrinciple.WithdrawService;

public class BankController {
	public static void main(String[] args) {
		Scanner scanner=new Scanner(System.in);
		String accno=scanner.next();
		System.out.println("Enter AccountNo");
		System.out.println("Select type of account "
				+"\n"+ "1.Savings"
				+"\n"+ "2.current");
		int accType=scanner.nextInt();
		
		if(accType==1)
		{
		
		System.out.println("Services Provided "
				+"\n"+ "1.Deposit"
				+"\n"+ "2.Withdraw"
				+"\n"+ "3.Generate OTP"
		int choice=scanner.nextInt();
		switch (choice) 
		{
			case 1: 
			{
				System.out.println("\n"+"Enter amount to be Deposited :");
				long n=scanner.nextLong();
				DepositService depositService =new DepositService();
				depositService.deposit(n, accno);
				break;
			}
			
			case 2: 
			{
				System.out.println("\n"+"Enter amount to be Withdraw :");
				long n=scanner.nextLong();
				WithdrawService service=new WithdrawService();
				service.withdraw(n, accno);
				break;
			}
			
			case 3:
			{
				NotificationService notificationService=new NotificationService();
				notificationService.sendOTP();
				break;
			}
			
			default:
			{
				System.err.println("invalid choice");
			}
			
		}

		
		
			
		}
		else if(accType==2)
		{
			System.out.println("Services Provided "
					+"\n"+ "1.Deposit"
					+"\n"+ "2.Generate OTP");
			int choice=scanner.nextInt();
			switch (choice) 
			{
				case 1: 
				{
					System.out.println("\n"+"Enter amount to be Deposited :");
					long n=scanner.nextLong();
					DepositService depositService =new DepositService();
					depositService.deposit(n, accno);
					break;
				}
				
				case 2: 
				{
					System.out.println("\n"+"Enter amount to be Withdraw :");
					long n=scanner.nextLong();
					WithdrawService service=new WithdrawService();
					service.withdraw(n, accno);
					break;
				}
				
				case 3:
				{
					NotificationService notificationService=new NotificationService();
					notificationService.sendOTP();
					break;
				}
				
				default:
				{
					System.err.println("invalid choice");
					break;
				}
				
			}

		}

}
}
		